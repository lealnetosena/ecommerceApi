// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

//npx prisma generate --schema=./prisma/schema.prisma
//**************************************
//Cadastro
//**************************************
model User{
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  cart Cart[]
  purchases Purchases[]
}

model Products{
  id    Int @id @default(autoincrement())
  dateCreated DateTime @default(now())
  name String 
  brand Brands @relation(fields: [brandId], references: [id])
  brandId Int
  description String
  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  priceUnit Decimal
  flagActive Boolean
  itemsCart ItemsCart[]
  itemsPurchases ItemsPurchases[]
}
model Brands{
  id Int @id @default(autoincrement())
  nameBrand String
  products Products[]
}

model Category{
  id Int @id @default(autoincrement())
  nameCategory String
  products Products[]
}


//**************************************
//Cart
//**************************************
model Cart{
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  totalValue Decimal
  itemsCart ItemsCart[]
  flagCartClose Boolean
}
//*

//
model ItemsCart{
  id Int @id @default(autoincrement())
  cart Cart @relation(fields: [cartId], references: [id])
  cartId Int
  product Products @relation(fields: [productId], references: [id])
  productId Int
  qty Int
  untValue Decimal

}
//**************************************
//Purchases
//**************************************
model Purchases{
  id Int @id @default(autoincrement())
  user User @relation(fields: [userId], references: [id])
  userId Int
  dateCreated DateTime @default(now())
  itemsPurchases ItemsPurchases[]
  totalValue Decimal
  cartId Int
}

model ItemsPurchases{
  id Int @id @default(autoincrement())
  purchases Purchases @relation(fields: [purchasesId], references: [id])
  purchasesId Int
  product Products @relation(fields: [productId], references: [id])
  productId Int
  qty Int
  untValue Decimal
}

